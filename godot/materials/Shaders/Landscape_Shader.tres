[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://buff3c6smrh5c"]

[ext_resource type="Texture2D" uid="uid://1auteaew6nbm" path="res://materials/Textures/Sand_Noise.tres" id="1_mjkp1"]

[sub_resource type="Gradient" id="Gradient_nex2x"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_eo438"]
noise_type = 2
seed = 4
frequency = 0.02
fractal_type = 0
cellular_distance_function = 3
cellular_jitter = 0.41

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_wsynu"]
width = 1024
height = 1024
color_ramp = SubResource("Gradient_nex2x")
noise = SubResource("FastNoiseLite_eo438")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_tl671"]
texture = SubResource("NoiseTexture2D_wsynu")

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_5i2fx"]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_uosqb"]
constant = Color(0.996094, 0.617188, 0.378906, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_v1p1f"]
input_name = "view_matrix"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_cur2i"]
operator = 1

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_o7yqy"]
default_input_values = [0, 0.0, 1, 0.9, 2, 1e-05, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_gwlgb"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_o2h04"]
texture = ExtResource("1_mjkp1")

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_22jl3"]
constant = Color(0.996094, 0.617188, 0.378906, 1)

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_l1k7c"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_sidsk"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.0]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_ngpam"]
output_port_for_preview = 0
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_13;



void fragment() {
// Input:16
	mat4 n_out16p0 = VIEW_MATRIX;


// Input:7
	vec3 n_out7p0 = NORMAL;


// TransformVectorMult:17
	vec3 n_out17p0 = (vec4(n_out7p0, 1.0) * n_out16p0).xyz;


// VectorCompose:8
	float n_in8p0 = 0.00000;
	float n_in8p1 = 1.00000;
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_in8p1, n_in8p2);


// DotProduct:3
	float n_out3p0 = dot(n_out17p0, n_out8p0);


// ColorConstant:5
	vec4 n_out5p0 = vec4(0.996094, 0.617188, 0.378906, 1.000000);


// Texture2D:4
	vec4 n_out4p0 = texture(tex_frg_4, UV);


// ColorOp:9
	vec3 n_out9p0 = min(vec3(n_out5p0.xyz), vec3(n_out4p0.xyz));


// ColorConstant:15
	vec4 n_out15p0 = vec4(0.996094, 0.617188, 0.378906, 1.000000);


// Texture2D:13
	vec4 n_out13p0 = texture(tex_frg_13, UV);


// ColorOp:14
	vec3 n_out14p0 = min(vec3(n_out15p0.xyz), vec3(n_out13p0.xyz));


	vec3 n_out2p0;
// If:2
	float n_in2p1 = 0.90000;
	float n_in2p2 = 0.00001;
	if(abs(n_out3p0 - n_in2p1) < n_in2p2)
	{
		n_out2p0 = n_out9p0;
	}
	else if(n_out3p0 < n_in2p1)
	{
		n_out2p0 = n_out14p0;
	}
	else
	{
		n_out2p0 = n_out9p0;
	}


// Output:0
	ALBEDO = n_out2p0;


}
"
nodes/fragment/2/node = SubResource("VisualShaderNodeIf_o7yqy")
nodes/fragment/2/position = Vector2(0, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeDotProduct_gwlgb")
nodes/fragment/3/position = Vector2(-260, 120)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_o2h04")
nodes/fragment/4/position = Vector2(-1060, 280)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorConstant_22jl3")
nodes/fragment/5/position = Vector2(-1000, 200)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_l1k7c")
nodes/fragment/7/position = Vector2(-880, 20)
nodes/fragment/8/node = SubResource("VisualShaderNodeVectorCompose_sidsk")
nodes/fragment/8/position = Vector2(-600, 80)
nodes/fragment/9/node = SubResource("VisualShaderNodeColorOp_ngpam")
nodes/fragment/9/position = Vector2(-680, 260)
nodes/fragment/13/node = SubResource("VisualShaderNodeTexture_tl671")
nodes/fragment/13/position = Vector2(-880, 780)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorOp_5i2fx")
nodes/fragment/14/position = Vector2(-440, 680)
nodes/fragment/15/node = SubResource("VisualShaderNodeColorConstant_uosqb")
nodes/fragment/15/position = Vector2(-760, 620)
nodes/fragment/16/node = SubResource("VisualShaderNodeInput_v1p1f")
nodes/fragment/16/position = Vector2(-880, -60)
nodes/fragment/17/node = SubResource("VisualShaderNodeTransformVecMult_cur2i")
nodes/fragment/17/position = Vector2(-540, -40)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 8, 0, 3, 1, 3, 0, 2, 0, 5, 0, 9, 0, 4, 0, 9, 1, 9, 0, 2, 3, 9, 0, 2, 4, 15, 0, 14, 0, 13, 0, 14, 1, 14, 0, 2, 5, 7, 0, 17, 1, 17, 0, 3, 0, 16, 0, 17, 0)
